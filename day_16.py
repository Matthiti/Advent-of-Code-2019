## PART 1 ##
input = "80871224585914546619083218645595"
'''
input = "59718730609456731351293131043954182702121108074562978243742884161871544398977055503320958653307507508966449714414337735187580549358362555889812919496045724040642138706110661041990885362374435198119936583163910712480088609327792784217885605021161016819501165393890652993818130542242768441596060007838133531024988331598293657823801146846652173678159937295632636340994166521987674402071483406418370292035144241585262551324299766286455164775266890428904814988362921594953203336562273760946178800473700853809323954113201123479775212494228741821718730597221148998454224256326346654873824296052279974200167736410629219931381311353792034748731880630444730593"
'''

BASE_PATTERN = [0, 1, 0, -1]


def get_pattern(index: int) -> [int]:
	res = []
	for n in BASE_PATTERN:
		for _ in range(index + 1):
			res.append(n)
	return res[1:] + [res[0]]


def do_phase(signal: [int]) -> [int]:
	res = []
	for i in range(len(signal)):
		pattern = get_pattern(i)
		sum = 0
		for j in range(len(signal)):
			sum += signal[j] * pattern[j % len(pattern)]
		res.append(abs(sum) % 10)
	return res


def main(input: str=input) -> int:
	signal = [int(c) for c in input]

	for i in range(100):
		print(signal)
		signal = do_phase(signal)

	return int(''.join([str(i) for i in signal[:8]]))


## PART 2 ##
input_2 = input * 10000

def main_2(input: str=input_2) -> int:
	return main(input)
